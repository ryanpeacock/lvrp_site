---
interface ProofText {
  book?: string; // Optional
  verse: string;
  text: string;
}

// Define the structure for the question item
interface QuestionItem {
  id: number;
  question: string;
  answer: string[];
  proofTexts?: ProofText[][];
}

interface Props {
  question: QuestionItem;
}

const { question } = Astro.props;
---

<div class="catechism-card">
  <div class="title">
    <span class="question-number">{`Question ${question.id}`}.</span>
    <span class="question-text">{question.question}</span>
  </div>
  <div class="body">
    <p>
      <span class="answer-title">Answer: </span>
      {
        question.answer.map((item, index) => {
          return (
            <span>
              {item}
              <span class="proof-number">{index + 1}</span>
            </span>
          );
        })
      }
    </p>
  </div>
  <!-- <div class="card-footer">
    <ul>
      {
        question.proofTexts.map((proof, index) => {
          return (
            <li>
              <span class="proof-number">{index + 1}</span>.
              <ul>
                {proof.map((item) => {
                  return (
                    <li>
                      <span>{item.book}</span>
                      <span>{item.verse}</span>
                    </li>
                  );
                })}
              </ul>
            </li>
          );
        })
      }
    </ul>
  </div> -->
</div>

<style>
  .catechism-card {
    /* padding: 1rem; */
    width: 325px;
    margin: 1rem;
    border-radius: 10px;
    box-shadow:
      0 4px 8px rgba(0, 0, 0, 0.2),
      0 2px 4px rgba(0, 0, 0, 0.2);
  }

  .title,
  .body,
  .card-footer {
    padding: 1.5rem;
  }

  .title,
  .body {
    border-bottom: 1px solid var(--black);
  }

  .title {
    font-style: italic;
    font-size: 1.05rem;
  }

  .question-number,
  .answer-title {
    font-weight: bold;
  }

  .proof-number {
    color: red;
    font-size: 0.75rem;
    font-weight: bold;
  }
</style>
